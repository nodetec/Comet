// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

export function CreateRelay(url: string, read: boolean, write: boolean, sync: boolean): Promise<$models.Relay> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2092870154, url, read, write, sync) as any;
    let $typingPromise = $resultPromise.then(($result) => {
        return $$createType0($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function DeleteRelays(): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1994699448) as any;
    return $resultPromise;
}

export function GetRelay(id: number): Promise<$models.Relay> & { cancel(): void } {
    let $resultPromise = $Call.ByID(22572148, id) as any;
    let $typingPromise = $resultPromise.then(($result) => {
        return $$createType0($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function ListRelays(): Promise<$models.Relay[]> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2174753327) as any;
    let $typingPromise = $resultPromise.then(($result) => {
        return $$createType1($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function UpdateRelay(id: number, url: string, read: boolean, write: boolean, sync: boolean): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3330694229, id, url, read, write, sync) as any;
    return $resultPromise;
}

// Private type creation functions
const $$createType0 = $models.Relay.createFrom;
const $$createType1 = $Create.Array($$createType0);
